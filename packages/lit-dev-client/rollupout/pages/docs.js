const e=window.matchMedia("(max-width:899px)");let t=e.matches;e.addEventListener("change",(e=>{t=e.matches})),window.addEventListener("DOMContentLoaded",(()=>{n(),r()}));const o=(e,t)=>{const o=t.getBoundingClientRect(),n=e.getBoundingClientRect();(n.bottom>o.bottom||n.top<o.top)&&t.scroll({top:n.top-o.top-o.height/2})},n=()=>{requestAnimationFrame((()=>{const e=document.querySelector("#docsNavWrapper"),t=document.querySelector("#docsNav .active");e&&t&&o(t,e)}))},r=()=>{if(!window.IntersectionObserver)return;const e=document.querySelector("article"),n=document.querySelector("#rhsToc"),r=document.querySelector("#rhsTocInner");if(!e||!n||!r)return;const c=new Map;for(const e of document.querySelectorAll("#rhsToc [href]")){const t=e.getAttribute("href");if(!t?.startsWith("#"))continue;const o=t.slice(1);c.set(o,e)}const s=new Set,i=new IntersectionObserver((e=>{let n=!1;for(const t of e){const e=t.target.id;e&&(n=!0,t.isIntersecting?s.add(e):s.delete(e))}if(!n)return;if(0===s.size)return;let i=!1;for(const[e,n]of c.entries())!i&&s.has(e)?(i=!0,n.classList.add("active"),t||requestAnimationFrame((()=>{o(n,r)}))):n.classList.remove("active")}));for(const t of e.querySelectorAll("h2[id],h3[id]"))i.observe(t)};
